include common/icon/icon.pug
include common/input/input.pug

mixin element(options)
  -
    let elementType = options.type.split('-');
    let isFocused = options.focus === true ? true : false;
    let inputValue = options.value ? options.value : '';

  div(class='form-elements__element')
    h3(class='form-elements__title') #{options.name}
    if options.mod
      h3(class='form-elements__mod') #{options.mod}
    case elementType[0] 
      when 'input'
        div(class='form-elements__input')
          +input({
            type: elementType[1],
            focus: isFocused,
            value: inputValue,
            ...(options.placeholder && {placeholder: options.placeholder}),
            ...(options.dropdown && {dropdown: options.dropdown})
          })
  

doctype html
html(lang="ru")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Form Elements
  body
    div(class='form-elements__icon')
      +icon
    div(class='form-elements__content')
      div(class='form-elements__inputs')
        +element({
          name: 'text field',
          mod: 'default',
          type: 'input-email'
        })
        +element({
          name: 'text field',
          mod: 'hover/focus',
          type: 'input-text',
          focus: true,
          value: 'This is pretty awesome'
        })
        +element({
          name: 'dropdown',
          type: 'input-dropdown',
          value: 'Сколько гостей',
          dropdown: ['взрослые', 'дети', 'младенцы']
        })
        +element({
          name: 'dropdown',
          type: 'input-dropdown',
          value: 'Количество спален, кроватей и ванных комнат',
          dropdown: ['спальни', 'кровати', 'ванные комнаты']
        })
        